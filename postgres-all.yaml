apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: netbox
  labels:
    backend: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      backend: postgres
  template:
    metadata:
      labels:
        backend: postgres
    spec:
      containers:  
      - image: postgres:11.4-alpine
        name: postgres 
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: postgres-env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: postgres-env      
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: postgres-env
        - name: PGDATA
          valueFrom:
            configMapKeyRef:
              key: PGDATA
              name: postgres-env      
        volumeMounts:
        - name: netbox-postgres-data
          mountPath: /var/lib/postgresql/data/  
      restartPolicy: Always
      volumes:
      - name: netbox-nginx-config
        configMap:
          name: nginx-conf
      - name: netbox-postgres-data
        persistentVolumeClaim:
          claimName: netbox-postgres-database-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: netbox
  labels:
    backend: postgres
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 5432
    targetPort: 5432
  selector:
    backend: postgres

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-env
  namespace: netbox
data:
  POSTGRES_USER: admindb
  POSTGRES_PASSWORD: 8g1xuYguSfNk9W7A
  POSTGRES_DB: netboxdata
  PGDATA: /var/lib/postgresql/data/pgdata

  
